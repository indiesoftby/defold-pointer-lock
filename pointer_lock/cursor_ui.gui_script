local pointer = require("pointer_lock.pointer")

local function set_alpha(node, alpha)
    gui.set_alpha(node, alpha)
    if alpha <= 0 then
        gui.set_enabled(node, false)
    else
        gui.set_enabled(node, true)
    end
end

function init(self)
    self.cursor_node = gui.get_node("cursor")
    self.cursor_img = gui.get_node("cursor_img")
end

function final(self)
end

function update(self, dt)
    gui.set_render_order(pointer.cursor_render_order)

    gui.set_position(self.cursor_node, vmath.vector3(pointer.cursor_x, pointer.cursor_y, 0))

    local cursor_alpha = (pointer.cursor_visible and 1 or 0) * (pointer.locked and 1 or 0.5)
    set_alpha(self.cursor_node, cursor_alpha)
end

function on_message(self, message_id, message, sender)
    if message_id == hash("cursor_scale") then
        assert(message.scale)

        gui.set_scale(self.cursor_img, message.scale)
    end
end

function on_input(self, action_id, action)
    -- NOTE: input should be acquired by the developer
    -- i.e. in the go script you should do `msg.post(".", "acquire_input_focus")`

    if action_id == nil then
        if html5 then
            pointer.update_lock_state()
        end

        if pointer.locked and pointer.cursor_visible then
            pointer.update_cursor_position(action)
        end
    end
end
